File Information
- File name: Selection
- Original Directory: /home/anabrendel/lfind/vfa-benchmarks/Selection/benchmarks/sources/selection_lemma_selsort_perm_IN_cons_of_small_maintains_sort
- LFind Directory: /home/anabrendel/lfind/vfa-benchmarks/Selection/benchmarks/sources/_lfind_selection_lemma_selsort_perm_IN_cons_of_small_maintains_sort
- Namespace: vfa_benchmark
- Proof name: cons_of_small_maintains_sort
- Theorem: Theorem cons_of_small_maintains_sort: forall (bl0 : list nat) (y0 n0 : nat) (_ : @eq nat n0 (@list_length nat bl0))
  (_ : le_all y0 bl0) (_ : sorted (selsort bl0 n0)),
sorted (@cons nat y0 (selsort bl0 n0)).
- Declarations: 
From lfind Require Import LFind.
From VFA Require Import Perm.

Proof Context
* Goal State: sorted (@cons nat y (selsort bl n))

* Hypothesis:
H0 : le_all y bl
H1 : sorted (selsort bl n)
bl : list nat
H : @eq nat (@list_length nat bl) n
y : nat
n : nat

* Types:
Set
Prop
nat
list nat

* Polymorphic Types:
list nat

* Variables:
bl : list nat
y : nat
n : nat

* Terms:
list nat : Set
le_all y bl : Prop
@cons nat y (selsort bl n) : list nat
nat : Set
@list_length nat bl : nat
selsort bl n : list nat
bl : list nat
sorted (selsort bl n) : Prop
y : nat
sorted (@cons nat y (selsort bl n)) : Prop
n : nat
@eq nat (@list_length nat bl) n : Prop

* Functions:
sorted  : forall _ : list nat, Prop
selsort  : forall (_ : list nat) (_ : nat), list nat
@list_length  : forall (T : Type) (_ : list T), nat
le_all  : forall (_ : nat) (_ : list nat), Prop
list  : forall _ : Type, Type
@cons  : forall (A : Type) (_ : A) (_ : list A), list A
@eq  : forall (A : Type) (_ : A) (_ : A), Prop

<---GENERALIZATION--->
Time elapsed: 3 seconds
Generalized Variables:
lf1 : list nat = @cons nat y (selsort bl n)
lf2 : list nat = selsort bl n

Generalizations:
Lemma conj1: forall (lf1 : list nat), sorted lf1.
Lemma conj3: forall (lf2 : list nat) (y : nat), sorted (@cons nat y lf2).
Lemma conj4: forall (bl : list nat) (y : nat) (n : nat), sorted (@cons nat y (selsort bl n)).


<---VALIDITY CHECKS--->
Time elapsed: 35 seconds
Valid:

Invalid:
Lemma conj4: forall (bl : list nat) (y : nat) (n : nat), sorted (@cons nat y (selsort bl n)).
Lemma conj3: forall (lf2 : list nat) (y : nat), sorted (@cons nat y lf2).
Lemma conj1: forall (lf1 : list nat), sorted lf1.

<---ADD IMPLICATIONS--->
Time elapsed: 53 seconds
Generalizations:
Lemma conj4: forall (bl : list nat) (y : nat) (n : nat), sorted (@cons nat y (selsort bl n)).
Lemma conj3: forall (lf2 : list nat) (y : nat), sorted (@cons nat y lf2).
Lemma conj3_imp: forall (lf2 : list nat) (bl : list nat) (y : nat) (n : nat), @eq nat (@list_length nat bl) n -> sorted (@cons nat y lf2).
Lemma conj1: forall (lf1 : list nat), sorted lf1.
Lemma conj1_imp: forall (bl : list nat) (lf1 : list nat) (n : nat), @eq nat (@list_length nat bl) n -> sorted lf1.


<---VALIDITY CHECKS--->
Time elapsed: 61 seconds
Valid:

Invalid:
Lemma conj1_imp: forall (bl : list nat) (lf1 : list nat) (n : nat), @eq nat (@list_length nat bl) n -> sorted lf1.
Lemma conj1: forall (lf1 : list nat), sorted lf1.
Lemma conj3_imp: forall (lf2 : list nat) (bl : list nat) (y : nat) (n : nat), @eq nat (@list_length nat bl) n -> sorted (@cons nat y lf2).
Lemma conj3: forall (lf2 : list nat) (y : nat), sorted (@cons nat y lf2).
Lemma conj4: forall (bl : list nat) (y : nat) (n : nat), sorted (@cons nat y (selsort bl n)).


<---CREATE SKETCHES--->
Time elapsed: 62 seconds
Sketches:
Sketch conj1_imp_sketch0 : forall _ : @eq nat (##hole##) n, sorted lf1
Sketch conj1_imp_term_sketch0 : @eq nat (@list_length nat bl) (##hole##)
Sketch conj3_imp_sketch0 : forall _ : @eq nat (@list_length nat bl) n, sorted (##hole##)
Sketch conj3_imp_sketch1 : forall _ : @eq nat (##hole##) n, sorted (@cons nat y lf2)
Sketch conj3_imp_term_sketch0 : @eq (list nat) (@cons nat y lf2) (##hole##)
Sketch conj3_imp_term_sketch1 : @eq nat (@list_length nat bl) (##hole##)
Sketch conj3_sketch0 : sorted (##hole##)
Sketch conj3_term_sketch0 : @eq (list nat) (@cons nat y lf2) (##hole##)
Sketch conj4_sketch0 : sorted (##hole##)
Sketch conj4_sketch1 : sorted (@cons nat y (##hole##))
Sketch conj4_term_sketch0 : @eq (list nat) (@cons nat y (selsort bl n)) (##hole##)
Sketch conj4_term_sketch1 : @eq (list nat) (selsort bl n) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 232 seconds
Problems per Sketch:
Sketch conj4_term_sketch1 --> Problem  synth_9
Sketch conj3_imp_term_sketch0 --> Problem  synth_5
Sketch conj3_sketch0 --> Problem  synth_6
Sketch conj3_term_sketch0 --> Problem  synth_5
Sketch conj3_imp_term_sketch1 --> Problem  synth_2
Sketch conj3_imp_sketch1 --> Problem  synth_4
Sketch conj3_imp_sketch0 --> Problem  synth_3
Sketch conj4_term_sketch0 --> Problem  synth_8
Sketch conj4_sketch0 --> Problem  synth_6
Sketch conj1_imp_term_sketch0 --> Problem  synth_2
Sketch conj4_sketch1 --> Problem  synth_7
Sketch conj1_imp_sketch0 --> Problem  synth_1


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 238 seconds

Problem: synth_8

Problem: synth_3

Problem: synth_9

Problem: synth_6

Problem: synth_7

Problem: synth_5
 @cons nat y lf2

Problem: synth_4

Problem: synth_1

Problem: synth_2

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 238 seconds
Lemmas:
Lemma candidate_1: forall (y : nat) (lf2 : list nat), @eq (list nat) (@cons nat y lf2) (@cons nat y lf2).
Lemma candidate_2: forall (y : nat) (lf2 : list nat), @eq (list nat) (@cons nat y lf2) (@cons nat y lf2).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 241 seconds
Duplicates removed: 1
Filtered by Quickchick: 0
Filtered by script: 1
Remaining: 0

Lemmas: 