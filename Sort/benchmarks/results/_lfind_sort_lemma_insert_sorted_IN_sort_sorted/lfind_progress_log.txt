File Information
- File name: Sort
- Original Directory: /home/anabrendel/lfind/vfa-benchmarks/Sort/benchmarks/sources/sort_lemma_insert_sorted_IN_sort_sorted
- LFind Directory: /home/anabrendel/lfind/vfa-benchmarks/Sort/benchmarks/sources/_lfind_sort_lemma_insert_sorted_IN_sort_sorted
- Namespace: vfa_benchmark
- Proof name: sort_sorted
- Theorem: Theorem sort_sorted: forall l0 : list nat, sorted (sort l0).
- Declarations: 
From lfind Require Import LFind.
From VFA Require Import Perm.

Proof Context
* Goal State: sorted (insert a (sort l))

* Hypothesis:
IHl : sorted (sort l)
l : list nat
a : nat

* Types:
Set
Prop
nat
list nat

* Polymorphic Types:
list nat

* Variables:
l : list nat
a : nat

* Terms:
list nat : Set
nat : Set
sorted (sort l) : Prop
sort l : list nat
sorted (insert a (sort l)) : Prop
l : list nat
a : nat
insert a (sort l) : list nat

* Functions:
sort  : forall _ : list nat, list nat
sorted  : forall _ : list nat, Prop
insert  : forall (_ : nat) (_ : list nat), list nat
list  : forall _ : Type, Type

<---GENERALIZATION--->
Time elapsed: 2 seconds
Generalized Variables:
lf1 : list nat = insert a (sort l)
lf2 : list nat = sort l

Generalizations:
Lemma conj1: forall (lf1 : list nat), sorted lf1.
Lemma conj3: forall (lf2 : list nat) (a : nat), sorted (insert a lf2).
Lemma conj4: forall (l : list nat) (a : nat), sorted (insert a (sort l)).


<---VALIDITY CHECKS--->
Time elapsed: 28 seconds
Valid:
Lemma conj4: forall (l : list nat) (a : nat), sorted (insert a (sort l)).

Invalid:
Lemma conj3: forall (lf2 : list nat) (a : nat), sorted (insert a lf2).
Lemma conj1: forall (lf1 : list nat), sorted lf1.

<---ADD IMPLICATIONS--->
Time elapsed: 33 seconds
Generalizations:
Lemma conj3: forall (lf2 : list nat) (a : nat), sorted (insert a lf2).
Lemma conj3_imp: forall (lf2 : list nat) (a : nat), forall _ : sorted lf2, sorted (insert a lf2).
Lemma conj1: forall (lf1 : list nat), sorted lf1.


<---VALIDITY CHECKS--->
Time elapsed: 39 seconds
Valid:
Lemma conj3_imp: forall (lf2 : list nat) (a : nat), forall _ : sorted lf2, sorted (insert a lf2).

Invalid:
Lemma conj1: forall (lf1 : list nat), sorted lf1.
Lemma conj3: forall (lf2 : list nat) (a : nat), sorted (insert a lf2).


<---CREATE SKETCHES--->
Time elapsed: 39 seconds
Sketches:
Sketch conj3_sketch0 : sorted (##hole##)
Sketch conj3_term_sketch0 : @eq (list nat) (insert a lf2) (##hole##)


<---CREATE SYNTHESIS PROBLEMS--->
Time elapsed: 59 seconds
Problems per Sketch:
Sketch conj3_sketch0 --> Problem  synth_1
Sketch conj3_term_sketch0 --> Problem  synth_2


<--- SYNTHESIS PROBLEM RESULTS--->
Time elapsed: 75 seconds

Problem: synth_1

Problem: synth_2
 sort (sort (insert a lf2))
 sort (insert a (sort lf2))
 insert a (sort (sort lf2))
 sort (insert a lf2)
 insert a (sort lf2)
 insert a lf2

<---INITIAL CANDIDATE LEMMAS--->
Time elapsed: 75 seconds
Lemmas:
Lemma candidate_1: forall (a : nat) (l : list nat), sorted (insert a (sort l)).
Lemma candidate_2: forall (a : nat) (lf2 : list nat), not (sorted lf2) \/ (sorted (insert a lf2)).
Lemma candidate_3: forall (a : nat) (lf2 : list nat), @eq (list nat) (insert a lf2) (sort (sort (insert a lf2))).
Lemma candidate_4: forall (a : nat) (lf2 : list nat), @eq (list nat) (insert a lf2) (sort (insert a (sort lf2))).
Lemma candidate_5: forall (a : nat) (lf2 : list nat), @eq (list nat) (insert a lf2) (insert a (sort (sort lf2))).
Lemma candidate_6: forall (a : nat) (lf2 : list nat), @eq (list nat) (insert a lf2) (sort (insert a lf2)).
Lemma candidate_7: forall (a : nat) (lf2 : list nat), @eq (list nat) (insert a lf2) (insert a (sort lf2)).
Lemma candidate_8: forall (a : nat) (lf2 : list nat), @eq (list nat) (insert a lf2) (insert a lf2).

<---FILTERED CANDIDATE LEMMAS--->
Time elapsed: 93 seconds
Duplicates removed: 1
Filtered by Quickchick: 5
Filtered by script: 1
Remaining: 1

Lemmas: 
Lemma candidate_2: forall (a : nat) (lf2 : list nat), not (sorted lf2) \/ (sorted (insert a lf2)).